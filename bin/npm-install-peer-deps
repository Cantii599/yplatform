#!/usr/bin/env bash
set -euo pipefail

SUPPORT_FIRECLOUD_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
source ${SUPPORT_FIRECLOUD_DIR}/sh/common.inc.sh

#- npm-install-peer-deps 1.0
## Usage: npm-install-peer-deps [OPTION] -- path/to/package.json/with/peerDependencies
## Install the peer dependencies mentioned in a package.json.
## NOTE: only updates package.json, doesn't call e.g. 'npm install'
##
##   -h, --help     Display this help and exit
##   -v, --version  Output version information and exit

if { getopt --test >/dev/null 2>&1 && false; } || [[ "$?" = "4" ]] || false; then
    ARGS=$(getopt -o hv -l help,version -n $(basename ${BASH_SOURCE[0]}) -- "$@") || sh_script_usage
    eval set -- "${ARGS}"
fi

while [[ $# -gt 0 ]]; do
    case "$1" in
        -h|--help)
            sh_script_usage
            ;;
        -v|--version)
            sh_script_version
            ;;
        --)
            shift
            break
            ;;
        -*)
            sh_script_usage
            ;;
        *)
            break
            ;;
    esac
done
# [[ $# -eq 0 ]] || sh_script_usage

case "$1" in
    /*)
        PKG_JSON="$1"
        ;;
    *)
        PKG_JSON="./$1"
        ;;
esac

node -e " \
    peerDeps = require('${PKG_JSON}').peerDependencies; \
    Object.keys(peerDeps).forEach(function(name) { \
        console.log(name + '\t' + peerDeps[name]); \
    }); \
    " | {
    while read -r LINE; do
        NAME=$(echo "${LINE}" | cut -d $'\t' -f 1)
        SPEC=$(echo "${LINE}" | cut -d $'\t' -f 2)

        # shellcheck disable=SC2094
        cat <<< "$(jq ".devDependencies += {\"${NAME}\": \"${SPEC}\"}" < package.json)" > package.json
        # npx json -q -I -f package.json -e "this.devDependencies = this.devDependencies || {}"
        # npx json -q -I -f package.json -e "this.devDependencies[\"${NAME}\"] = \"${SPEC}\""
    done
}
