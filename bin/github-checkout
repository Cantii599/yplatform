#!/usr/bin/env bash
set -euo pipefail

# basic git config
git config --global core.autocrlf false
git config --global core.eol lf
git config --global advice.detachedHead false

# use https instead of everything else
git config --global --add url."https://github.com/".insteadOf "git://github.com/"
git config --global --add url."https://github.com/".insteadOf "git@github.com:"
git config --global --add url."https://github.com/".insteadOf "github://"
git config --global --add url."https://github.com/".insteadOf "ssh://git@github.com/"

# use github token transparently
BASE64="base64 --wrap 0"
echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="base64"
echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="openssl base64 -A"
echo "" | ${BASE64} >/dev/null 2>&1 || {
    echo "[ERR ] Need a utility to base64-encode. None found."
    exit 1
}
GIT_HTTP_EXTRAHEADER="AUTHORIZATION: basic $(echo -n "x-access-token:${GITHUB_TOKEN}" | ${BASE64})"
git config --global --add http."https://github.com/".extraheader "${GIT_HTTP_EXTRAHEADER}"

# use git protocol version 2 if available
GIT_PROTOCOL_VERSION_2=true
{
    echo "git version 2.18.0"
    git --version
} | sed "s/^git version //g" | sort -V | head -1 | grep -q -Fx "git version 2.18.0" || GIT_PROTOCOL_VERSION_2=false
[[ "${GIT_PROTOCOL_VERSION_2}" = "false" ]] || {
    git config --global --add protocol.version 2
    GIT_DEPTH_ARG="--depth=1"
}

# ------------------------------------------------------------------------------

# clone/fetch
GIT_URL=${GITHUB_SERVER_URL:-${GITHUB_URL:-https://github.com}}/${GITHUB_REPOSITORY}.git
if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
    GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/heads\/}"
elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
    GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/tags\/}"
fi
cd ${GITHUB_WORKSPACE}
git clone --progress ${GIT_DEPTH_ARG:-} ${GIT_BRANCH_ARG} ${GIT_URL} $(pwd)
# shellcheck disable=SC2193
if [[ "${GITHUB_EVENT_NAME}" = "pull_request" ]]; then
    git fetch --progress ${GIT_DEPTH_ARG:-} origin ${GITHUB_REF}:refs/remotes/pull/${GITHUB_REF#refs\/pull\/}
    GITHUB_SHA=$(git rev-parse pull/${GITHUB_REF#refs\/pull\/})
    GITHUB_REF=refs/heads/${GITHUB_BASE_REF}
fi

# ------------------------------------------------------------------------------

# checkout
if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
    git checkout -B ${GITHUB_REF#refs\/heads\/} ${GITHUB_SHA}
elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
    git checkout ${GITHUB_REF}
else
    set -x
    printenv
    cat ${GITHUB_EVENT_PATH}
    exit 1
fi

# submodules
git submodule sync --recursive
git submodule update --init --recursive --force ${GIT_DEPTH_ARG:-}
