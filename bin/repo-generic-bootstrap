#!/usr/bin/env bash
set -euo pipefail

YP_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
source ${YP_DIR}/sh/common.inc.sh

#- repo-generic-bootstrap 1.0
## Usage: repo-generic-boostrap [OPTION]
## Bootstrap a repo as a generic repo.
##
##   --diff         Bootstrap a temporary folder for comparing
##                  current status with current bootstrap template
##
##   -h, --help     Display this help and exit
##   -v, --version  Output version information and exit

DIFF=false

if { getopt --test >/dev/null 2>&1 && false; } || [[ "$?" = "4" ]] || false; then
    ARGS=$(getopt -o hv -l help,version,diff -n $(basename ${BASH_SOURCE[0]}) -- "$@") || sh_script_usage
    eval set -- "${ARGS}"
fi

while [[ $# -gt 0 ]]; do
    case "$1" in
        --diff)
            DIFF=true
            shift
            ;;
        -h|--help)
            sh_script_usage
            ;;
        -v|--version)
            sh_script_version
            ;;
        --)
            shift
            break
            ;;
        -*)
            sh_script_usage
            ;;
        *)
            break
            ;;
    esac
done
[[ $# -eq 0 ]] || sh_script_usage

cd ${YP_DIR}/..
git rev-parse --show-toplevel >/dev/null || {
    echo_err "yplatform is not in a git repository"
    exit 1
}
[[ "$(cd $(git rev-parse --show-toplevel) && pwd -P)" = "$(pwd -P)" ]] || {
    echo_err "yplatform is not in the root of a git repository"
    exit 1
}

YP_DIR_REL="$(python -c "import os.path; print('%s' % os.path.relpath('${YP_DIR}', '$(pwd)'))")"
ARTIFACTS=

if ${DIFF}; then
    echo_info "Creating a temporary vanilla bootstrapped folder for comparison"
    TMP_VANILLA_DIR=$(mktemp -d -t firecloud.XXXXXXXXXX)
    echo_info "${TMP_VANILLA_DIR}"
    echo_info "e.g. opendiff . ${TMP_VANILLA_DIR}"
    echo_info "e.g. ksdiff . ${TMP_VANILLA_DIR}"
    echo
    ln -s ${YP_DIR} ${TMP_VANILLA_DIR}/yplatform
    cd ${TMP_VANILLA_DIR}
fi

# NOTE duplicate code on purpose

ARTIFACT=.editorconfig
[[ -e ${ARTIFACT} ]] || {
    ln -s ${YP_DIR_REL}/repo/dot.editorconfig ${ARTIFACT}
    ARTIFACTS="${ARTIFACTS}\\n${ARTIFACT}"
    echo_info "Symlinked ${ARTIFACT}."
}

ARTIFACT=.ci.sh
[[ -e ${ARTIFACT} ]] || {
    cp ${YP_DIR_REL}/repo/dot.ci.sh ${ARTIFACT}
    ARTIFACTS="${ARTIFACTS}\\n${ARTIFACT}"
    echo_info "Created ${ARTIFACT}."
}

[[ -e .github ]] || {
    mkdir -p .github
    for ARTIFACT in "${YP_DIR_REL}/repo/dot.github"/* "${YP_DIR_REL}/repo/dot.github"/.*; do
        ARTIFACT=.github/$(basename ${ARTIFACT})
        [[ "${ARTIFACT}" != ".github/settings.base.yml" ]] || continue
        [[ -e ${ARTIFACT} ]] || {
            cp ${YP_DIR_REL}/repo/dot${ARTIFACT} ${ARTIFACT}
            ARTIFACTS="${ARTIFACTS}\\n${ARTIFACT}"
            echo_info "Created ${ARTIFACT}."
        }
    done
}

ARTIFACT=.shellcheckrc
[[ -e ${ARTIFACT} ]] || {
    ln -s ${YP_DIR_REL}/repo/dot.shellcheckrc ${ARTIFACT}
    ARTIFACTS="${ARTIFACTS}\\n${ARTIFACT}"
    echo_info "Symlinked ${ARTIFACT}."
}

[[ -e .vscode ]] || {
    mkdir -p .vscode
    for ARTIFACT in "${YP_DIR_REL}/repo/dot.vscode"/* "${YP_DIR_REL}/repo/dot.vscode"/.*; do
        ARTIFACT=.vscode/$(basename ${ARTIFACT})
        [[ -e ${ARTIFACT} ]] || {
            ln -s ../${YP_DIR_REL}/repo/dot${ARTIFACT} ${ARTIFACT}
            ARTIFACTS="${ARTIFACTS}\\n${ARTIFACT}"
            echo_info "Symlinked ${ARTIFACT}."
        }
    done
}

ARTIFACT=LICENSE
[[ -e ${ARTIFACT} ]] || {
    cp ${YP_DIR_REL}/repo/LICENSE ${ARTIFACT}
    ARTIFACTS="${ARTIFACTS}\\n${ARTIFACT}"
    echo_info "Created ${ARTIFACT}."
}

ARTIFACT=NOTICE
[[ -e ${ARTIFACT} ]] || {
    cp ${YP_DIR_REL}/repo/NOTICE ${ARTIFACT}
    ARTIFACTS="${ARTIFACTS}\\n${ARTIFACT}"
    echo_info "Created ${ARTIFACT}."
    echo_info "Make sure to edit ${ARTIFACT} in order to supply the required info."
}

ARTIFACT=AUTHORS
[[ -e ${ARTIFACT} ]] || {
    cp ${YP_DIR_REL}/repo/AUTHORS ${ARTIFACT}
    ARTIFACTS="${ARTIFACTS}\\n${ARTIFACT}"
    echo_info "Created ${ARTIFACT}."
    echo_info "Make sure to edit ${ARTIFACT} in order to supply the required info."
}

ARTIFACT=Brewfile.inc.sh
[[ -e ${ARTIFACT} ]] || {
    cp ${YP_DIR_REL}/repo/Brewfile.inc.sh ${ARTIFACT}
    ARTIFACTS="${ARTIFACTS}\\n${ARTIFACT}"
    echo_info "Created ${ARTIFACT}."
    echo_info "Make sure to edit ${ARTIFACT} in order to supply the required info."
}

ARTIFACT=Brewfile.lock
[[ -e ${ARTIFACT} ]] || {
    ln -s ${YP_DIR_REL}/Brewfile.lock ${ARTIFACT}
    ARTIFACTS="${ARTIFACTS}\\n${ARTIFACT}"
    echo_info "Symlinked ${ARTIFACT}."
}

ARTIFACT=Makefile
[[ -e ${ARTIFACT} ]] || {
    cp ${YP_DIR_REL}/repo/Makefile.generic ${ARTIFACT}
    ARTIFACTS="${ARTIFACTS}\\n${ARTIFACT}"
    echo_info "Created ${ARTIFACT}."
    echo_info "Make sure to edit ${ARTIFACT} in order to supply the required info."
}

ARTIFACT=README.md
[[ -e ${ARTIFACT} ]] || {
    cp ${YP_DIR_REL}/repo/README.md ${ARTIFACT}
    ARTIFACTS="${ARTIFACTS}\\n${ARTIFACT}"
    echo_info "Created ${ARTIFACT}."
    echo_info "Make sure to edit ${ARTIFACT} in order to supply the required info."
}

ARTIFACT=package.json
[[ -e ${ARTIFACT} ]] || {
    cp ${YP_DIR_REL}/repo/package.json ${ARTIFACT}
    ARTIFACTS="${ARTIFACTS}\\n${ARTIFACT}"
    echo_info "Created ${ARTIFACT}."
    echo_info "Make sure to edit ${ARTIFACT} in order to supply the required info."
}

echo -e "${ARTIFACTS}" | sort -u
