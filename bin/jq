#!/usr/bin/env bash
set -euo pipefail

BAK_SUPPORT_FIRECLOUD_DIR=${SUPPORT_FIRECLOUD_DIR:-/dev/null}
SUPPORT_FIRECLOUD_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
source ${SUPPORT_FIRECLOUD_DIR}/sh/common.inc.sh

VSN=1.6
JQ_URL=https://github.com/stedolan/jq/releases/download
BINARY=jq
BINARY_LOCAL=$(
    which -a ${BINARY} 2>/dev/null | \
        grep -v "${BAK_SUPPORT_FIRECLOUD_DIR}/bin/jq" | \
        grep -v "${SUPPORT_FIRECLOUD_DIR}/bin/jq" | \
        head -n1 || \
        true)

[[ -z "${BINARY_LOCAL}" ]] || {
    echo_info "Proxying to 'jq' as ${BINARY_LOCAL}."
    ${BINARY} "$@"
    exit 0
}

case ${OS_SHORT} in
    linux)
        BINARY=jq-linux${ARCH_BIT}
        BINARY_LOCAL=${SUPPORT_FIRECLOUD_DIR}/bin/jq-${VSN}/${BINARY}
        BINARY_REMOTE=${JQ_URL}/jq-${VSN}/${BINARY}
        ;;
    darwin)
        BINARY=jq-osx-amd64
        BINARY_LOCAL=${SUPPORT_FIRECLOUD_DIR}/bin/jq-${VSN}/${BINARY}
        BINARY_REMOTE=${JQ_URL}/jq-${VSN}/${BINARY}
        ;;
    *)
        echo_err "jq: ${OS_SHORT} is an unsupported OS."
        exit 1
        ;;
esac

mkdir -p $(dirname ${BINARY_LOCAL})

[[ -f ${BINARY_LOCAL} ]] || {
    curl -fqsSL \
         -o ${BINARY_LOCAL} \
         ${BINARY_REMOTE}
}

chmod +x ${BINARY_LOCAL}

echo_info "Proxying to 'jq' as ${BINARY_LOCAL}."
${BINARY_LOCAL} "$@"
