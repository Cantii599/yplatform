#!/usr/bin/env bash
set -euo pipefail

SUPPORT_FIRECLOUD_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
source ${SUPPORT_FIRECLOUD_DIR}/sh/common.inc.sh

#- sponge 1.0
## Usage: sponge -- [FILENAME]
## Poor man's version of moreutils sponge.
##
##   -h, --help     Display this help and exit
##   -v, --version  Output version information and exit

TMP_SPONGE=$(mktemp -t firecloud.XXXXXXXXXX)
function on_exit() {
    rm -rf ${TMP_SPONGE}
}
trap on_exit EXIT

if { getopt --test >/dev/null 2>&1 && false; } || [[ "$?" = "4" ]] || false; then
    ARGS=$(getopt -o hv -l help,version -n $(basename ${BASH_SOURCE[0]}) -- "$@") || sh_script_usage
    eval set -- "${ARGS}"
fi

while [[ $# -gt 0 ]]; do
    case "$1" in
        -h|--help)
            sh_script_usage
            ;;
        -v|--version)
            sh_script_version
            ;;
        --)
            shift
            break
            ;;
        -*)
            sh_script_usage
            ;;
        *)
            break
            ;;
    esac
done
# [[ $# -eq 0 ]] || sh_script_usage

FILENAME=${1:-}

cat - > ${TMP_SPONGE}

# chown --reference=${FILENAME} ${TMP_SPONGE}
# chmod --reference=${FILENAME} ${TMP_SPONGE}

# NOTE BSD chown/chmod have no --preference flag
# An alternative would have been 'cp --preserve=all ${FILENAME} ${TMP_SPONGE}'
# but BSD cp has no --preserve flag either.

[[ -n "${FILENAME}" ]] || {
    cat ${TMP_SPONGE}
    exit 0
}

[[ -e "${FILENAME}" ]] || touch "${FILENAME}"

GNU_CHOWN=$(chown --version 2>/dev/null | head -1 | grep -q "GNU" && echo true || echo false)
case "${GNU_CHOWN}-${OS_SHORT}" in
    true-*)
        chown --reference=${FILENAME} ${TMP_SPONGE}
        ;;
    false-darwin)
        /usr/sbin/chown $(stat -f "%Su:%Sg" ${FILENAME}) ${TMP_SPONGE}
        ;;
    *)
        echo_err "GNU or Darwin chown required."
        >&2 exe_debug "chown"
        exit 1
        ;;
esac

GNU_CHMOD=$(chmod --version 2>/dev/null | head -1 | grep -q "GNU" && echo true || echo false)
case "${GNU_CHMOD}-${OS_SHORT}" in
    true-*)
        chmod --reference=${FILENAME} ${TMP_SPONGE}
        ;;
    false-darwin)
        /bin/chmod $(stat -f "%A" ${FILENAME}) ${TMP_SPONGE}
        ;;
    *)
        echo_err "GNU or Darwin chmod required."
        >&2 exe_debug "chmod"
        exit 1
        ;;
esac

mv -f ${TMP_SPONGE} ${FILENAME}
