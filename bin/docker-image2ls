#!/usr/bin/env bash
set -euo pipefail

# inspired by https://github.com/moul/docker-diff

YP_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." >/dev/null && pwd)"
source ${YP_DIR}/sh/common.inc.sh

#- docker-image2ls 1.0
## Usage: docker-image2ls [OPTION] IMAGE
## Show a file-system listing of a Docker image.
## Useful for later diffing two file-systems with
##    diff --unified=1000000 <(bin/docker-image2ls alpine:3.2) <(bin/docker-image2ls alpine:3.3)
##
##   --folder-size  Calculate folder sizes. Performance hit.
##
##   -h, --help     Display this help and exit
##   -v, --version  Output version information and exit

FOLDER_SIZE=

if { getopt --test >/dev/null 2>&1 && false; } || [[ "$?" = "4" ]] || false; then
    ARGS=$(getopt -o hv -l help,version,folder-size -n $(basename ${BASH_SOURCE[0]}) -- "$@") || sh_script_usage
    eval set -- "${ARGS}"
fi

while [[ $# -gt 0 ]]; do
    case "$1" in
        --folder-size)
            FOLDER_SIZE=true
            shift
            ;;
        -h|--help)
            sh_script_usage
            ;;
        -v|--version)
            sh_script_version
            ;;
        --)
            shift
            break
            ;;
        -*)
            sh_script_usage
            ;;
        *)
            break
            ;;
    esac
done
# [[ $# -eq 0 ]] || sh_script_usage

TMP_DOCKER_DIFF=$(mktemp -d -t yplatform.XXXXXXXXXX)
IMAGE=$1

echo_info "Creating a container for ${IMAGE}..."
CONTAINER_ID="$(docker create ${IMAGE} /bin/sh)"

function on_exit() {
    rm -rf ${TMP_DOCKER_DIFF}
    docker rm -fv "${CONTAINER_ID}" >/dev/null
}
trap on_exit EXIT

function docker_tar_list() {
    tar \
        --exclude "dev" \
        --exclude "etc/mtab" \
        --exclude "proc" \
        -tvf $1 \
        > $1.txt
}

function docker_tar_folder_size() {
    local FOLDER_LINE_INDEX=0
    while read -r FOLDER_LINE; do
        FOLDER_LINE_INDEX=$(( ${FOLDER_LINE_INDEX} + 1 ))
        echo "${FOLDER_LINE}" | grep -q "/$" || continue

        local COL12="$(echo "${FOLDER_LINE}" | tr -s " " | cut -d" " -f1-2)"
        local COL4="$(echo "${FOLDER_LINE}" | tr -s " " | cut -d" " -f4-)"
        local FOLDER="$(echo "${FOLDER_LINE}" | tr -s " " | cut -d" " -f6)"
        local FOLDER_SIZE=0
        while read -r LINE; do
            echo "${LINE}" | tr -s " " | cut -d" " -f6 | grep -q "^${FOLDER}" || break
            echo "${LINE}" | tr -s " " | cut -d" " -f6 | grep -q -v "/$" || continue
            local SIZE="$(echo "${LINE}" | tr -s " " | cut -d" " -f3)"
            FOLDER_SIZE=$(( ${FOLDER_SIZE} + ${SIZE} ))
        done < <(cat $1.txt | tail -n +$(( ${FOLDER_LINE_INDEX} + 1 )))
        FOLDER_SIZE="$(printf "%15s" ${FOLDER_SIZE})"
        FOLDER_LINE_NEW="${COL12} ${FOLDER_SIZE} ${COL4}"
        sed -i "s,^${FOLDER_LINE}$,${FOLDER_LINE_NEW}," $1.txt
    done < <(cat $1.txt)
}

echo_info "Exporting and listing the file system of ${IMAGE}.."
docker export "${CONTAINER_ID}" >${TMP_DOCKER_DIFF}/image.tar
docker_tar_list ${TMP_DOCKER_DIFF}/image.tar
[[ "${FOLDER_SIZE}" != "true" ]] || {
    echo_info "Calculating folder sizes..."
    docker_tar_folder_size ${TMP_DOCKER_DIFF}/image.tar
}
cat ${TMP_DOCKER_DIFF}/image.tar.txt
