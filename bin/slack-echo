#!/usr/bin/env bash
set -euo pipefail

YP_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
source ${YP_DIR}/sh/common.inc.sh

#- slack-echo 1.0
## Usage: slack-echo [OPTION] -- TEXT...
## Echo message via a Slack webhook.
##
##   -f, --from     Text to display as sender. Defaults to $(whoami)@$(hostname)
##   -i, --icon     Emoji to display as sender's icon. Defaults to ":shipit:"
##   -t, --to       Recipient as #channel or @username. Defaults to ${SLACK_CHANNEL}
##   -w, --webhook  Webhook URL. Defaults to ${SLACK_WEBHOOK}
##
##   -h, --help     Display this help and exit
##   -v, --version  Output version information and exit

TMP_SLACK_PAYLOAD=$(mktemp -t firecloud.XXXXXXXXXX)
function on_exit() {
    rm -rf ${TMP_SLACK_PAYLOAD}
}
trap on_exit EXIT

FROM="$(whoami)@$(hostname)"
ICON=":shipit:"
TO=
[[ -z ${SLACK_CHANNEL:-} ]] || {
    TO="#${SLACK_CHANNEL}"
}

if { getopt --test >/dev/null 2>&1 && false; } || [[ "$?" = "4" ]] || false; then
    ARGS=$(getopt -o hvf:i:t:w: -l help,version,from:,icon:,to:,webhook: -n $(basename ${BASH_SOURCE[0]}) -- "$@") || sh_script_usage # editorconfig-checker-disable-line
    eval set -- "${ARGS}"
fi

while [[ $# -gt 0 ]]; do
    case "$1" in
        -f|--from)
            FROM=$2
            shift 2
            ;;
        -i|--icon)
            ICON=$2
            shift 2
            ;;
        -t|--to)
            TO=$2
            shift 2
            ;;
        -w|--webhook)
            SLACK_WEBHOOK="$2"
            shift 2
            ;;
        -h|--help)
            sh_script_usage
            ;;
        -v|--version)
            sh_script_version
            ;;
        --)
            shift
            break
            ;;
        -*)
            sh_script_usage
            ;;
        *)
            break
            ;;
    esac
done
# [[ $# -eq 0 ]] || sh_script_usage

CHANNEL_TO=
[[ -z ${TO} ]] || {
    CHANNEL_TO="\"channel\": \"${TO}\","
}

TEXT="$*"
TEXT="${TEXT//\"/\\\"}"
TEXT="${TEXT//$'\n'/\\\n}"

cat > ${TMP_SLACK_PAYLOAD} <<EOF
{
"username": "${FROM}",
${CHANNEL_TO}
"icon_emoji": "${ICON}",
"text": "${TEXT}"
}
EOF

cat ${TMP_SLACK_PAYLOAD}

curl -qfsSL \
    -X POST \
    -H "content-type: application/json" \
    --data @${TMP_SLACK_PAYLOAD} \
    ${SLACK_WEBHOOK}
