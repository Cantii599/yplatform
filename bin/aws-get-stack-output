#!/usr/bin/env bash
set -euo pipefail

SUPPORT_FIRECLOUD_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
source ${SUPPORT_FIRECLOUD_DIR}/sh/common.inc.sh

#- aws-get-stack-output 1.0
## Usage: aws-get-stack-output [OPTION]
## Echo stack output given a stack name.
##
##   --stack-name   Stack name
##   --output       Output name
##
##   -h, --help     Display this help and exit
##   -v, --version  Output version information and exit

STACK_NAME=
OUTPUT=

if { getopt --test >/dev/null 2>&1 && false; } || [[ "$?" = "4" ]] || false; then
    ARGS=$(getopt -o hv -l help,version,stack-name:,output: -n $(basename ${BASH_SOURCE[0]}) -- "$@") || sh_script_usage # editorconfig-checker-disable-line
    eval set -- "${ARGS}"
fi

while [[ $# -gt 0 ]]; do
    case "$1" in
        --stack-name)
            STACK_NAME="$2"
            shift 2
            ;;
        --output)
            OUTPUT=$2
            shift 2
            ;;
        -h|--help)
            sh_script_usage
            ;;
        -v|--version)
            sh_script_version
            ;;
        --)
            shift
            break
            ;;
        -*)
            sh_script_usage
            ;;
        *)
            break
            ;;
    esac
done
[[ $# -eq 0 ]] || sh_script_usage

[[ -n ${STACK_NAME} ]] || {
    echo_err "Please provide a --stack-name."
    exit 1
}

[[ -n ${OUTPUT} ]] || {
    echo_err "Please provide an --output."
    exit 1
}

aws cloudformation describe-stacks \
    --stack-name ${STACK_NAME} \
    --output text \
    --query "Stacks[0].Outputs[?OutputKey=='${OUTPUT}'].{Value:OutputValue}" \
    2>/dev/null
