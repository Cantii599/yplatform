#!/usr/bin/env bash
set -euo pipefail

# Run a NodeJS script with support for ES6-imports
# e.g. instead of `node some/script.js` use `node-esm some/script.js`
# See https://github.com/standard-things/esm

# if first call, install esm and call script again
if [[ -z "${NODE_ESM_PASS:-}" ]]; then
    # npm@6 and npm@7 are not compatible regarding the --yes flag
    # see https://github.com/npm/cli/issues/2226#issuecomment-732475247
    export npm_config_yes=true

    export NODE_ESM_PASS=1
    export NODE_ESM_ARGS="$*"
    export PATH="${PATH}:$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
    npx --quiet --package esm node-esm
    exit 0
fi

# make NPX node_modules available to node
NPX_PATH=$(echo ${PATH} | tr ":" "\n" | grep "\.npm/_npx" | head -n1 || true)
# starting NPM@7 the local packages will be reused, thus NPX_PATH is empty
[[ -z "${NPX_PATH}" ]] || {
    NPX_PATH=$(dirname ${NPX_PATH})
    export NODE_PATH=${NPX_PATH}/lib/node_modules:${NPX_PATH}:${NODE_PATH:-}
}

# require esm and run script
eval "node -r esm ${NODE_ESM_ARGS}"
