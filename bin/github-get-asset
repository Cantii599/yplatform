#!/usr/bin/env bash
set -euo pipefail

SUPPORT_FIRECLOUD_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
source ${SUPPORT_FIRECLOUD_DIR}/sh/common.inc.sh

#- github-get-asset 1.0
## Usage: github-get-asset [OPTION]
## Download a github release asset (aka binary).
##
##   --repo-slug    The github repository slug: account/repo
##   --tag          The release tag
##   --asset        The asset filename
##   --token        The OAuth Token, if the repository is private
##   --slug         DEPRECATED. Short for "tag/asset". Please use '--tag' and '--asset'
##
##   -h, --help     Display this help and exit
##   -v, --version  Output version information and exit

REPO_SLUG=
TAG=
ASSET=
GH_TOKEN=

while [[ $# -gt 0 ]]; do
    case "$1" in
        --asset)
            ASSET=$2
            shift 2
            ;;
        --repo-slug)
            REPO_SLUG=$2
            shift 2
            ;;
        --slug)
            TAG="$(dirname "$2")"
            ASSET="$(basename "$2")"
            shift 2
            ;;
        --tag)
            TAG=$2
            shift 2
            ;;
        --token)
            GH_TOKEN=$2
            shift 2
            ;;
        -h|--help)
            sh_script_usage
            ;;
        -v|--version)
            sh_script_version
            ;;
        -* )
            sh_script_usage
            ;;
        *)
            sh_script_usage
            ;;
    esac
done

[[ -n ${REPO_SLUG} ]] || {
    echo_err "Please provide a --repo-slug."
    exit 1
}

[[ -n ${TAG} ]] || {
    echo_err "Please provide a --tag."
    exit 1
}

[[ -n ${ASSET} ]] || {
    echo_err "Please provide a --asset."
    exit 1
}

if [[ -n ${GH_TOKEN} ]]; then
    RELEASE_URL="https://api.github.com/repos/${REPO_SLUG}/releases/tags/${TAG}"
    ASSETS_URL=$(curl -qfsSL -H "authorization: token ${GH_TOKEN}" "${RELEASE_URL}" | \
        jq -r ".assets_url")
    ASSET_URL=$(curl -qfsSL -H "authorization: token ${GH_TOKEN}" "${ASSETS_URL}" | \
        jq -r ". | map(select(.name == \"${ASSET}\"))[0].url")
    [[ -n ${ASSET_URL} ]] || {
        echo_err "Couldn't find an asset ${SLUG} for repo ${REPO_SLUG}."
        exit 1
    }
    ASSET_URL="${ASSET_URL/api.github.com/${GH_TOKEN}@api.github.com}"
else
    ASSET_URL="https://github.com/repos/${REPO_SLUG}/releases/download/${SLUG}"
fi

curl \
    -qfsSL \
    -H "accept: application/octet-stream" \
    "${ASSET_URL}"
