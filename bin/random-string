#!/usr/bin/env bash
set -euo pipefail

SUPPORT_FIRECLOUD_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
source ${SUPPORT_FIRECLOUD_DIR}/sh/common.inc.sh

#- random-string 1.0
## Usage: random-string [OPTION]
## Generate a random string.
##
##   --length       String length. Defaults to 32 (UUID).
##   --set          Character set as allowed by 'tr'. Defaults to 'a-zA-Z0-9'
##
##   -h, --help     Display this help and exit
##   -v, --version  Output version information and exit

LENGTH=32
SET=a-zA-Z0-9

if { getopt --test >/dev/null 2>&1 && false; } || [[ "$?" = "4" ]] || false; then
    ARGS=$(getopt -o hv -l help,version,length:,set: -n $(basename ${BASH_SOURCE[0]}) -- "$@") || sh_script_usage
    eval set -- "${ARGS}"
fi

while [[ $# -gt 0 ]]; do
    case "$1" in
        --length)
            LENGTH=$2
            shift 2
            ;;
        --set)
            SET=$2
            shift 2
            ;;
        -h|--help)
            sh_script_usage
            ;;
        -v|--version)
            sh_script_version
            ;;
        --)
            shift
            break
            ;;
        -*)
            sh_script_usage
            ;;
        *)
            break
            ;;
    esac
done
[[ $# -eq 0 ]] || sh_script_usage

# NOTE 141 means SIGPIPE
# cat /dev/urandom | env LC_CTYPE=C tr -dc "${SET}" | head -c "${LENGTH}" || exit_allow_sigpipe

# see https://vegardit.github.io/bash-funk/docs/random.html#-random-string
# "2> >(grep -v "write error" >&2)" and "|| true" to mitigate "tr: write error: Broken pipe" on e.g. GitHub Actions
env -i LC_CTYPE=C tr -dc "${SET}" </dev/urandom 2> >(grep -v "write error" >&2 || true) | head -c "${LENGTH}" || \
    exit_allow_sigpipe
