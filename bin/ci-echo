#!/usr/bin/env bash
set -euo pipefail

SUPPORT_FIRECLOUD_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")/.." && pwd)"
source ${SUPPORT_FIRECLOUD_DIR}/bin/common.inc.sh

#- ci-echo 1.0
## Usage: ci-echo STEP TEXT...
## Echo message with a STEP indicator for stdout or for TeamCity/Travis consumption.
##
##   -h, --help     Display this help and exit
##   -v, --version  Output version information and exit

while [[ $# -gt 0 ]]; do
    case "$1" in
        -h|--help)
            sh_script_usage
            ;;
        -v|--version)
            sh_script_version
            ;;
        -* )
            sh_script_usage
            ;;
        *)
            break
            ;;
    esac
done

function fallback_echo() {
    >&2 echo "$@"
}

function basic_travis_echo() {
	XTRACE_STATE="$(shopt -po xtrace || true)" # shopt exits with non zero?
	set +x
	echo "travis_fold:$@"
	eval "${XTRACE_STATE}"
}

function travis_echo() {
    case $1 in
        "[DO  ]")
            GROUP="$(echo "${@:2}" | tr 'A-Z' 'a-z' | sed "s/[^a-z]\\+/-/g" | sed "s/^-//" | sed "s/-$//")"
            echo -n "${GROUP}" > /tmp/travis_fold_${RANDOM}
            basic_travis_echo "start:${GROUP}"
            fallback_echo "$(date +"%H:%M:%S") $@"
            return 0
        ;;
        "[DONE]")
            fallback_echo "$(date +"%H:%M:%S") $@"
            GROUP="$(echo "${@:2}" | tr 'A-Z' 'a-z' | sed "s/[^a-z]\\+/-/g" | sed "s/^-//" | sed "s/-$//")"
            [[ -n "${GROUP}" ]] || {
                GROUP="$(ls -t /tmp/travis_fold_* | head -n1 | xargs cat || echo "")"
                GROUP_CREATED_AGO=$(stat -c '%Z' $(ls -t /tmp/travis_fold_* | head -n1))
                [[ -z ${GROUP_CREATED_AGO} ]] ||
                    GROUP_CREATED_AGO=$(($(date +%s) - ${GROUP_CREATED_AGO}))
                ls -t /tmp/travis_fold_* | head -n1 | xargs rm || true
            }
            basic_travis_echo "end:${GROUP}"
            echo "$(date +"%H:%M:%S") [DONE] in ${GROUP_CREATED_AGO:-some} seconds"
            return 0
        ;;
        *)
        ;;
    esac

    fallback_echo "$(date +"%H:%M:%S") $@"
}

function basic_teamcity_echo() {
	XTRACE_STATE="$(shopt -po xtrace || true)" # shopt exits with non zero?
	set +x
	echo "##teamcity[$@]"
	eval "${XTRACE_STATE}"
}

function teamcity_echo() {
    local STATUS=NORMAL
    local STEP="$1"
    local MESSAGE="$(echo "${@:2}" | sed "s/'/|'/")"

    case $1 in
        "[NEXT]")
            echo "##teamcity[progressMessage '${MESSAGE}']"
            return 0
        ;;
        "[DO  ]")
            PWD_MESSAGE="$(pwd) ${MESSAGE}"
            echo -n "${PWD_MESSAGE}" > /tmp/teamcity_block_${RANDOM}
            basic_teamcity_echo "blockOpened name='${PWD_MESSAGE}'"
            return 0
        ;;
        "[DONE]")
            [[ -z "${MESSAGE}" ]] && {
                PWD_MESSAGE="$(ls -t /tmp/teamcity_block_* | head -n1 | xargs cat || echo "")"
                ls -t /tmp/teamcity_block_* | head -n1 | xargs rm || true
            } || {
                PWD_MESSAGE="$(pwd) ${MESSAGE}"
            }
            basic_teamcity_echo "blockClosed name='${PWD_MESSAGE}'"
            return 0
        ;;
        "[SKIP]")
            STATUS=WARNING
        ;;
        "[WARN]")
            STATUS=WARNING
        ;;
        "[ERR ]")
            STATUS=ERROR
        ;;
        "[INFO]"|*)
        ;;
    esac

    echo "##teamcity[message text='${MESSAGE}' status='${STATUS}']"
}

if [ "${TRAVIS:-}" = "true" ]; then
    travis_echo "$1" "${@:2}"
elif [ -n "${TEAMCITY_VERSION:-}" ]; then
    teamcity_echo "$1" "${@:2}"
else
    fallback_echo "${@}"
fi
