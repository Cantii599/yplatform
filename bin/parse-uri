#!/usr/bin/env bash
set -euo pipefail

# see https://datatracker.ietf.org/doc/html/rfc3986#appendix-B
# see https://stackoverflow.com/a/45977232/465684
# see https://stackoverflow.com/a/63993578/465684

# Following regex is based on https://tools.ietf.org/html/rfc3986#appendix-B with
# additional sub-expressions to split authority into userinfo, host and port
#
readonly URI_REGEX='^(([^:/?#]+):)?(//((([^:/?#]+)@)?([^:/?#]+)(:([0-9]+))?))?((/|$)([^?#]*))(\?([^#]*))?(#(.*))?'
#                    ↑↑            ↑  ↑↑↑            ↑         ↑ ↑            ↑ ↑            ↑  ↑        ↑ ↑
#                    |2 scheme     |  ||6 userinfo   7 host    | 9 port       | 12 rpath     |  14 query | 16 fragment
#                    1 scheme:     |  |5 userinfo@             8 :…           10 path        13 ?…       15 #…
#                                  |  4 authority
#                                  3 //…

readonly SSH_REGEX='^(()()((([^:/?#]+)@)?([^:/?#]+)(:([0-9]+))?))?((:|$)([^?#]*))(\?([^#]*))?(#(.*))?'

URI_MATCH=false
SSH_MATCH=false
if [[ "$*" =~ ${URI_REGEX} ]]; then
    # shellcheck disable=SC2034
    URI_MATCH=true
elif [[ "$*" =~ ${SSH_REGEX} ]]; then
    SSH_MATCH=true
else
    >&2 echo "[ERR ] $* doesn't match our URI/SSH regex."
    exit 1
fi

# create a shadow variable, or else you may get 'BASH_REMATCH: readonly variable'
MATCH=()
for i in {1..16}; do
    MATCH[${i}]="${BASH_REMATCH[${i}]:-}"
done

[[ "${SSH_MATCH}" != "true" ]] || {
    # normalize to ssh: URI
    MATCH[1]="ssh:"
    MATCH[2]="ssh"
    MATCH[3]="//${MATCH[4]}"
    MATCH[10]="${MATCH[10]/#:/\/}"
    MATCH[11]="/"
}

echo "URI_SCHEME=${MATCH[2]}"
echo "URI_AUTHORITY=${MATCH[4]}"
echo "URI_USER=${MATCH[6]}"
echo "URI_HOST=${MATCH[7]}"
echo "URI_PORT=${MATCH[9]}"
echo "URI_PATH=${MATCH[10]}"
echo "URI_RPATH=${MATCH[12]}"
echo "URI_QUERY=${MATCH[14]}"
echo "URI_FRAGMENT=${MATCH[16]}"
