name: CI
on:
  push:
    branches:
      - github* # github branches
      - master
    tags:
      - 'v*' # version tags
  pull_request:
    branches:
      - '**'
  schedule:
    - cron:  '0 0 * * *'

aliases:
  env: &env
    GITHUB_MATRIX_OS: ${{ matrix.os }}
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    SF_CI_BREW_INSTALL: ${{ matrix.sf_ci_brew_install }}
    SF_LOG_BOOTSTRAP: true
    SF_PRINTENV_BOOTSTRAP: ${{ secrets.SF_PRINTENV_BOOTSTRAP }}
    SF_TRANSCRYPT_PASSWORD: ${{ secrets.SF_TRANSCRYPT_PASSWORD }}
    V: ${{ secrets.V }}
  git-crlf: &git-crlf # needed on windows
    name: Set up git (autocrlf, eol)
    shell: bash
    run: |
      set -x
      git config --global core.autocrlf false
      git config --global core.eol lf
  checkout: &checkout
    # run: /support-firecloud/repo/dot.ci.sh sf_ga_checkout
    uses: actions/checkout@v2
  checkout-submodules: &checkout-submodules
    name: Run actions/checkout@v2 (submodules)
    shell: bash
    run: |
      set -x
      auth_header="$(git config --local --get http.https://github.com/.extraheader)"
      git submodule sync --recursive
      git -c "http.extraheader=$auth_header" -c protocol.version=2 \
      submodule update --init --force --recursive --depth=1

# ------------------------------------------------------------------------------

jobs:
  main:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-16.04
          - ubuntu-18.04
          - ubuntu-20.04
          - macos-10.15
          # FIXME macos 11 has long queues
          # see https://github.com/actions/virtual-environments/issues/2247#issuecomment-757577274
          # - macos-11.0
        sf_ci_brew_install:
          - minimal
          - dev
    name: main-${{ matrix.os }}-${{ matrix.sf_ci_brew_install }}
    runs-on: ${{ matrix.os }}
    env:
      <<: *env
      GITHUB_JOB_NAME: main-${{ matrix.os }}-${{ matrix.sf_ci_brew_install }}
    steps: &steps
      - *checkout
      - *checkout-submodules

      - shell: bash
        run: ./.ci.sh before_install

      - shell: bash
        run: ./.ci.sh install

      - shell: bash
        run: ./.ci.sh before_script

      - shell: bash
        run: ./.ci.sh script

      - if: failure()
        shell: bash
        run: ./.ci.sh after_failure || true

      - shell: bash
        run: ./.ci.sh after_success || true

      - if: always()
        shell: bash
        run: ./.ci.sh after_script || true

      - if: always()
        shell: bash
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: cloud-ci
          CI_STATUS: ${{ job.status }}
        run: ./.ci.sh notifications || true

# ------------------------------------------------------------------------------

  main-container:
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        container:
          - debian:wheezy # 7
          - debian:jessie # 8
          - debian:stretch # 9
          - debian:buster # 10
          - ubuntu:12.04
          - ubuntu:14.04
        sf_ci_brew_install:
          - minimal
          - dev
    name: main-${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}
    runs-on: ubuntu-latest
    container:
      image: ${{ matrix.container }}
      env:
        <<: *env
        GITHUB_JOB_NAME: main-${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}
    steps: *steps

# ------------------------------------------------------------------------------

  main-windows:
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-2019
        sf_ci_brew_install:
          - minimal
          # - dev # too time consuming
    name: main-${{ matrix.os }}-${{ matrix.sf_ci_brew_install }}
    runs-on: ${{ matrix.os }}
    env:
      <<: *env
      GITHUB_JOB_NAME: main-${{ matrix.os }}-${{ matrix.sf_ci_brew_install }}
      WSLENV: '${ENVSUBST_WSLENV}'
      WSLUSER: github
      WSLGROUP: github
    steps:
      - *git-crlf
      - *checkout
      - *checkout-submodules

      - name: Set up WSLENV
        shell: bash
        run: |
          set -x
          GITHUB_WSLENV="$(printenv | grep "^GITHUB" | cut -d"=" -f1 | sort | \
          sed "s|^GITHUB_ENV\$|GITHUB_ENV/p|" | \
          sed "s|^GITHUB_EVENT_PATH\$|GITHUB_EVENT_PATH/p|" | \
          sed "s|^GITHUB_PATH\$|GITHUB_PATH/p|" | \
          sed "s|^GITHUB_WORKSPACE\$|GITHUB_WORKSPACE/p|" | \
          tr "\n" ":")"
          echo "WSLENV=${WSLENV:-}:${GITHUB_WSLENV}" >> ${GITHUB_ENV}
      - name: Set up WSL
        shell: bash
        run: |
          set -x
          # why --ignore-checksum? see https://chocolatey.org/packages/wsl-ubuntu-1804#comment-5026624059
          choco install wsl-ubuntu-1804 --yes --no-progress --ignore-checksum
          wsl bash -c "cat /etc/os-release"
          wsl bash -c "sudo addgroup --gid 2000 ${WSLGROUP}"
          wsl bash -c "sudo adduser --uid 2000 --ingroup ${WSLGROUP} --home /home/${WSLUSER} --shell /bin/bash --disabled-password --gecos \"\" ${WSLUSER}"
          wsl bash -c "sudo adduser ${WSLUSER} sudo"
          wsl bash -c "sudo echo \"${WSLUSER} ALL=(ALL) NOPASSWD:ALL\" >> /etc/sudoers"
          # Use wsl.conf to fix error: chmod on .git/config.lock failed: Operation not permitted
          # See https://gist.github.com/shakahl/8b6c969768b3a54506c0fc4905d729a0
          wsl bash -c "sudo cp priv/wsl.conf /etc/wsl.conf && sudo chmod 0644 /etc/wsl.conf"

      - shell: bash
        run: bin/wsl-bash -c "./.ci.sh before_install"

      - shell: bash
        run: bin/wsl-bash -c "./.ci.sh install"

      - shell: bash
        run: bin/wsl-bash -c "./.ci.sh before_script"

      - shell: bash
        run: bin/wsl-bash -c "./.ci.sh script"

      - if: always()
        shell: bash
        run: bin/wsl-bash -c "./.ci.sh after_failure || true"

      - shell: bash
        run: bin/wsl-bash -c "./.ci.sh after_success || true"

      - if: always()
        shell: bash
        run: bin/wsl-bash -c "./.ci.sh after_script || true"

      - if: always()
        shell: bash
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: cloud-ci
          CI_STATUS: ${{ job.status }}
        run: bin/wsl-bash -c "./.ci.sh notifications || true"

# ------------------------------------------------------------------------------

  deploy-minimal:
    if: startsWith(github.ref, 'refs/tags/')
    needs: main
    strategy:
      fail-fast: false
      matrix:
        os: &deploy-strategy-matrix-os
          - ubuntu-16.04
          - ubuntu-18.04
        sf_ci_brew_install:
          - minimal
    name: deploy-${{ matrix.os }}-${{ matrix.sf_ci_brew_install }}
    runs-on: ${{ matrix.os }}
    env: &deploy-env
      <<: *env
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
      GITHUB_JOB_NAME: main-${{ matrix.os }}-${{ matrix.sf_ci_brew_install }}
    steps: &deploy-steps
      - *checkout
      - *checkout-submodules
      - shell: bash
        run: ./.ci.sh before_deploy
      - shell: bash
        run: ./.ci.sh deploy
      - shell: bash
        run: ./.ci.sh after_deploy || true

  deploy-common:
    if: startsWith(github.ref, 'refs/tags/')
    needs: deploy-minimal
    strategy:
      fail-fast: false
      matrix:
        os: *deploy-strategy-matrix-os
        sf_ci_brew_install:
          - common
    name: deploy-${{ matrix.os }}-${{ matrix.sf_ci_brew_install }}
    runs-on: ${{ matrix.os }}
    env: *deploy-env
    steps: *deploy-steps
