name: CD
'on':
  push:
    tags:
      - v*
concurrency:
  group: 'deploy-${{ github.ref }}'
jobs:
  deployc-minimal-smoke:
    needs: []
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        container:
          - sf-ubuntu-20.04
        sf_ci_brew_install:
          - minimal
    name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      SF_LOG_BOOTSTRAP: true
      SF_PRINTENV_BOOTSTRAP: '${{ secrets.SF_PRINTENV_BOOTSTRAP }}'
      SF_TRANSCRYPT_PASSWORD: '${{ secrets.SF_TRANSCRYPT_PASSWORD }}'
      V: '${{ secrets.V }}'
      DOCKER_USERNAME: '${{ secrets.DOCKER_USERNAME }}'
      DOCKER_TOKEN: '${{ secrets.DOCKER_TOKEN }}'
      GITHUB_MATRIX_CONTAINER: '${{ matrix.container }}'
      GITHUB_MATRIX_SF_CI_BREW_INSTALL: '${{ matrix.sf_ci_brew_install }}'
      GITHUB_JOB_NAME: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    steps:
      - name: support-firecloud/bin/github-checkout
        shell: bash
        run: |
          set -x
          #!/usr/bin/env bash
          set -euo pipefail

          # basic git config
          git config --global core.autocrlf false
          git config --global core.eol lf
          git config --global advice.detachedHead false

          # use https instead of everything else
          git config --global --add url."https://github.com/".insteadOf "git://github.com/"
          git config --global --add url."https://github.com/".insteadOf "git@github.com:"
          git config --global --add url."https://github.com/".insteadOf "github://"
          git config --global --add url."https://github.com/".insteadOf "ssh://git@github.com/"

          # use github token transparently
          [[ -z "${GITHUB_TOKEN:-}" ]] || {
              BASE64="base64 --wrap 0"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="base64"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="openssl base64 -A"
              echo "" | ${BASE64} >/dev/null 2>&1
              GIT_HTTP_EXTRAHEADER="AUTHORIZATION: basic $(echo -n "x-access-token:${GITHUB_TOKEN}" | ${BASE64})"
              git config --global --add http."https://github.com/".extraheader "${GIT_HTTP_EXTRAHEADER}"
          }

          # use git protocol version 2 if available
          ! git config --help | grep -q "wire protocol version 2" || {
              git config --global --add protocol.version 2
              GIT_DEPTH_ARG="--depth=1"
          }

          # ------------------------------------------------------------------------------

          # clone/fetch
          GIT_URL=${GITHUB_SERVER_URL:-${GITHUB_URL:-https://github.com}}/${GITHUB_REPOSITORY}.git
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/heads\/}"
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/tags\/}"
          fi
          cd ${GITHUB_WORKSPACE}
          git clone ${GIT_DEPTH_ARG:-} ${GIT_BRANCH_ARG} ${GIT_URL} $(pwd)
          # shellcheck disable=SC2193
          if [[ "${GITHUB_EVENT_NAME}" = "pull_request" ]]; then
              git fetch ${GIT_DEPTH_ARG:-} origin ${GITHUB_REF}:refs/remotes/pull/${GITHUB_REF#refs\/pull\/}
              GITHUB_SHA=$(git rev-parse pull/${GITHUB_REF#refs\/pull\/})
              GITHUB_REF=refs/heads/${GITHUB_BASE_REF}
          fi

          # ------------------------------------------------------------------------------

          # checkout
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              git checkout -B ${GITHUB_REF#refs\/heads\/} ${GITHUB_SHA:-origin/${GITHUB_REF#refs\/heads\/}}
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              git checkout ${GITHUB_REF}
          else
              set -x
              printenv
              cat ${GITHUB_EVENT_PATH}
              exit 1
          fi

          # submodules
          git submodule sync --recursive
          git submodule update --init --recursive --force ${GIT_DEPTH_ARG:-}
      - shell: bash
        run: ./.ci.sh before_deploy
      - shell: bash
        run: ./.ci.sh deploy
      - shell: bash
        run: ./.ci.sh after_deploy || true
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
          path: |-
            sf-ci-echo-benchmark
            some-job-artifact.md
            log.sh-session
          retention-days: 7
  deployc-minimal-arch:
    needs:
      - deployc-common-smoke
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        container:
          - sf-arch-0
        sf_ci_brew_install:
          - minimal
    name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      SF_LOG_BOOTSTRAP: true
      SF_PRINTENV_BOOTSTRAP: '${{ secrets.SF_PRINTENV_BOOTSTRAP }}'
      SF_TRANSCRYPT_PASSWORD: '${{ secrets.SF_TRANSCRYPT_PASSWORD }}'
      V: '${{ secrets.V }}'
      DOCKER_USERNAME: '${{ secrets.DOCKER_USERNAME }}'
      DOCKER_TOKEN: '${{ secrets.DOCKER_TOKEN }}'
      GITHUB_MATRIX_CONTAINER: '${{ matrix.container }}'
      GITHUB_MATRIX_SF_CI_BREW_INSTALL: '${{ matrix.sf_ci_brew_install }}'
      GITHUB_JOB_NAME: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    steps:
      - name: support-firecloud/bin/github-checkout
        shell: bash
        run: |
          set -x
          #!/usr/bin/env bash
          set -euo pipefail

          # basic git config
          git config --global core.autocrlf false
          git config --global core.eol lf
          git config --global advice.detachedHead false

          # use https instead of everything else
          git config --global --add url."https://github.com/".insteadOf "git://github.com/"
          git config --global --add url."https://github.com/".insteadOf "git@github.com:"
          git config --global --add url."https://github.com/".insteadOf "github://"
          git config --global --add url."https://github.com/".insteadOf "ssh://git@github.com/"

          # use github token transparently
          [[ -z "${GITHUB_TOKEN:-}" ]] || {
              BASE64="base64 --wrap 0"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="base64"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="openssl base64 -A"
              echo "" | ${BASE64} >/dev/null 2>&1
              GIT_HTTP_EXTRAHEADER="AUTHORIZATION: basic $(echo -n "x-access-token:${GITHUB_TOKEN}" | ${BASE64})"
              git config --global --add http."https://github.com/".extraheader "${GIT_HTTP_EXTRAHEADER}"
          }

          # use git protocol version 2 if available
          ! git config --help | grep -q "wire protocol version 2" || {
              git config --global --add protocol.version 2
              GIT_DEPTH_ARG="--depth=1"
          }

          # ------------------------------------------------------------------------------

          # clone/fetch
          GIT_URL=${GITHUB_SERVER_URL:-${GITHUB_URL:-https://github.com}}/${GITHUB_REPOSITORY}.git
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/heads\/}"
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/tags\/}"
          fi
          cd ${GITHUB_WORKSPACE}
          git clone ${GIT_DEPTH_ARG:-} ${GIT_BRANCH_ARG} ${GIT_URL} $(pwd)
          # shellcheck disable=SC2193
          if [[ "${GITHUB_EVENT_NAME}" = "pull_request" ]]; then
              git fetch ${GIT_DEPTH_ARG:-} origin ${GITHUB_REF}:refs/remotes/pull/${GITHUB_REF#refs\/pull\/}
              GITHUB_SHA=$(git rev-parse pull/${GITHUB_REF#refs\/pull\/})
              GITHUB_REF=refs/heads/${GITHUB_BASE_REF}
          fi

          # ------------------------------------------------------------------------------

          # checkout
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              git checkout -B ${GITHUB_REF#refs\/heads\/} ${GITHUB_SHA:-origin/${GITHUB_REF#refs\/heads\/}}
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              git checkout ${GITHUB_REF}
          else
              set -x
              printenv
              cat ${GITHUB_EVENT_PATH}
              exit 1
          fi

          # submodules
          git submodule sync --recursive
          git submodule update --init --recursive --force ${GIT_DEPTH_ARG:-}
      - shell: bash
        run: ./.ci.sh before_deploy
      - shell: bash
        run: ./.ci.sh deploy
      - shell: bash
        run: ./.ci.sh after_deploy || true
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
          path: |-
            sf-ci-echo-benchmark
            some-job-artifact.md
            log.sh-session
          retention-days: 7
  deployc-minimal-alpine:
    needs:
      - deployc-common-smoke
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        container:
          - sf-alpine-3.11.7
        sf_ci_brew_install:
          - minimal
    name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      SF_LOG_BOOTSTRAP: true
      SF_PRINTENV_BOOTSTRAP: '${{ secrets.SF_PRINTENV_BOOTSTRAP }}'
      SF_TRANSCRYPT_PASSWORD: '${{ secrets.SF_TRANSCRYPT_PASSWORD }}'
      V: '${{ secrets.V }}'
      DOCKER_USERNAME: '${{ secrets.DOCKER_USERNAME }}'
      DOCKER_TOKEN: '${{ secrets.DOCKER_TOKEN }}'
      GITHUB_MATRIX_CONTAINER: '${{ matrix.container }}'
      GITHUB_MATRIX_SF_CI_BREW_INSTALL: '${{ matrix.sf_ci_brew_install }}'
      GITHUB_JOB_NAME: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    steps:
      - name: support-firecloud/bin/github-checkout
        shell: bash
        run: |
          set -x
          #!/usr/bin/env bash
          set -euo pipefail

          # basic git config
          git config --global core.autocrlf false
          git config --global core.eol lf
          git config --global advice.detachedHead false

          # use https instead of everything else
          git config --global --add url."https://github.com/".insteadOf "git://github.com/"
          git config --global --add url."https://github.com/".insteadOf "git@github.com:"
          git config --global --add url."https://github.com/".insteadOf "github://"
          git config --global --add url."https://github.com/".insteadOf "ssh://git@github.com/"

          # use github token transparently
          [[ -z "${GITHUB_TOKEN:-}" ]] || {
              BASE64="base64 --wrap 0"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="base64"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="openssl base64 -A"
              echo "" | ${BASE64} >/dev/null 2>&1
              GIT_HTTP_EXTRAHEADER="AUTHORIZATION: basic $(echo -n "x-access-token:${GITHUB_TOKEN}" | ${BASE64})"
              git config --global --add http."https://github.com/".extraheader "${GIT_HTTP_EXTRAHEADER}"
          }

          # use git protocol version 2 if available
          ! git config --help | grep -q "wire protocol version 2" || {
              git config --global --add protocol.version 2
              GIT_DEPTH_ARG="--depth=1"
          }

          # ------------------------------------------------------------------------------

          # clone/fetch
          GIT_URL=${GITHUB_SERVER_URL:-${GITHUB_URL:-https://github.com}}/${GITHUB_REPOSITORY}.git
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/heads\/}"
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/tags\/}"
          fi
          cd ${GITHUB_WORKSPACE}
          git clone ${GIT_DEPTH_ARG:-} ${GIT_BRANCH_ARG} ${GIT_URL} $(pwd)
          # shellcheck disable=SC2193
          if [[ "${GITHUB_EVENT_NAME}" = "pull_request" ]]; then
              git fetch ${GIT_DEPTH_ARG:-} origin ${GITHUB_REF}:refs/remotes/pull/${GITHUB_REF#refs\/pull\/}
              GITHUB_SHA=$(git rev-parse pull/${GITHUB_REF#refs\/pull\/})
              GITHUB_REF=refs/heads/${GITHUB_BASE_REF}
          fi

          # ------------------------------------------------------------------------------

          # checkout
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              git checkout -B ${GITHUB_REF#refs\/heads\/} ${GITHUB_SHA:-origin/${GITHUB_REF#refs\/heads\/}}
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              git checkout ${GITHUB_REF}
          else
              set -x
              printenv
              cat ${GITHUB_EVENT_PATH}
              exit 1
          fi

          # submodules
          git submodule sync --recursive
          git submodule update --init --recursive --force ${GIT_DEPTH_ARG:-}
      - shell: bash
        run: ./.ci.sh before_deploy
      - shell: bash
        run: ./.ci.sh deploy
      - shell: bash
        run: ./.ci.sh after_deploy || true
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
          path: |-
            sf-ci-echo-benchmark
            some-job-artifact.md
            log.sh-session
          retention-days: 7
  deployc-minimal-centos:
    needs:
      - deployc-common-smoke
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        container:
          - sf-centos-8
        sf_ci_brew_install:
          - minimal
    name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      SF_LOG_BOOTSTRAP: true
      SF_PRINTENV_BOOTSTRAP: '${{ secrets.SF_PRINTENV_BOOTSTRAP }}'
      SF_TRANSCRYPT_PASSWORD: '${{ secrets.SF_TRANSCRYPT_PASSWORD }}'
      V: '${{ secrets.V }}'
      DOCKER_USERNAME: '${{ secrets.DOCKER_USERNAME }}'
      DOCKER_TOKEN: '${{ secrets.DOCKER_TOKEN }}'
      GITHUB_MATRIX_CONTAINER: '${{ matrix.container }}'
      GITHUB_MATRIX_SF_CI_BREW_INSTALL: '${{ matrix.sf_ci_brew_install }}'
      GITHUB_JOB_NAME: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    steps:
      - name: support-firecloud/bin/github-checkout
        shell: bash
        run: |
          set -x
          #!/usr/bin/env bash
          set -euo pipefail

          # basic git config
          git config --global core.autocrlf false
          git config --global core.eol lf
          git config --global advice.detachedHead false

          # use https instead of everything else
          git config --global --add url."https://github.com/".insteadOf "git://github.com/"
          git config --global --add url."https://github.com/".insteadOf "git@github.com:"
          git config --global --add url."https://github.com/".insteadOf "github://"
          git config --global --add url."https://github.com/".insteadOf "ssh://git@github.com/"

          # use github token transparently
          [[ -z "${GITHUB_TOKEN:-}" ]] || {
              BASE64="base64 --wrap 0"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="base64"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="openssl base64 -A"
              echo "" | ${BASE64} >/dev/null 2>&1
              GIT_HTTP_EXTRAHEADER="AUTHORIZATION: basic $(echo -n "x-access-token:${GITHUB_TOKEN}" | ${BASE64})"
              git config --global --add http."https://github.com/".extraheader "${GIT_HTTP_EXTRAHEADER}"
          }

          # use git protocol version 2 if available
          ! git config --help | grep -q "wire protocol version 2" || {
              git config --global --add protocol.version 2
              GIT_DEPTH_ARG="--depth=1"
          }

          # ------------------------------------------------------------------------------

          # clone/fetch
          GIT_URL=${GITHUB_SERVER_URL:-${GITHUB_URL:-https://github.com}}/${GITHUB_REPOSITORY}.git
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/heads\/}"
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/tags\/}"
          fi
          cd ${GITHUB_WORKSPACE}
          git clone ${GIT_DEPTH_ARG:-} ${GIT_BRANCH_ARG} ${GIT_URL} $(pwd)
          # shellcheck disable=SC2193
          if [[ "${GITHUB_EVENT_NAME}" = "pull_request" ]]; then
              git fetch ${GIT_DEPTH_ARG:-} origin ${GITHUB_REF}:refs/remotes/pull/${GITHUB_REF#refs\/pull\/}
              GITHUB_SHA=$(git rev-parse pull/${GITHUB_REF#refs\/pull\/})
              GITHUB_REF=refs/heads/${GITHUB_BASE_REF}
          fi

          # ------------------------------------------------------------------------------

          # checkout
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              git checkout -B ${GITHUB_REF#refs\/heads\/} ${GITHUB_SHA:-origin/${GITHUB_REF#refs\/heads\/}}
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              git checkout ${GITHUB_REF}
          else
              set -x
              printenv
              cat ${GITHUB_EVENT_PATH}
              exit 1
          fi

          # submodules
          git submodule sync --recursive
          git submodule update --init --recursive --force ${GIT_DEPTH_ARG:-}
      - shell: bash
        run: ./.ci.sh before_deploy
      - shell: bash
        run: ./.ci.sh deploy
      - shell: bash
        run: ./.ci.sh after_deploy || true
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
          path: |-
            sf-ci-echo-benchmark
            some-job-artifact.md
            log.sh-session
          retention-days: 7
  deployc-minimal-debian:
    needs:
      - deployc-common-smoke
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        container:
          - sf-debian-9
          - sf-debian-10
        sf_ci_brew_install:
          - minimal
    name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      SF_LOG_BOOTSTRAP: true
      SF_PRINTENV_BOOTSTRAP: '${{ secrets.SF_PRINTENV_BOOTSTRAP }}'
      SF_TRANSCRYPT_PASSWORD: '${{ secrets.SF_TRANSCRYPT_PASSWORD }}'
      V: '${{ secrets.V }}'
      DOCKER_USERNAME: '${{ secrets.DOCKER_USERNAME }}'
      DOCKER_TOKEN: '${{ secrets.DOCKER_TOKEN }}'
      GITHUB_MATRIX_CONTAINER: '${{ matrix.container }}'
      GITHUB_MATRIX_SF_CI_BREW_INSTALL: '${{ matrix.sf_ci_brew_install }}'
      GITHUB_JOB_NAME: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    steps:
      - name: support-firecloud/bin/github-checkout
        shell: bash
        run: |
          set -x
          #!/usr/bin/env bash
          set -euo pipefail

          # basic git config
          git config --global core.autocrlf false
          git config --global core.eol lf
          git config --global advice.detachedHead false

          # use https instead of everything else
          git config --global --add url."https://github.com/".insteadOf "git://github.com/"
          git config --global --add url."https://github.com/".insteadOf "git@github.com:"
          git config --global --add url."https://github.com/".insteadOf "github://"
          git config --global --add url."https://github.com/".insteadOf "ssh://git@github.com/"

          # use github token transparently
          [[ -z "${GITHUB_TOKEN:-}" ]] || {
              BASE64="base64 --wrap 0"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="base64"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="openssl base64 -A"
              echo "" | ${BASE64} >/dev/null 2>&1
              GIT_HTTP_EXTRAHEADER="AUTHORIZATION: basic $(echo -n "x-access-token:${GITHUB_TOKEN}" | ${BASE64})"
              git config --global --add http."https://github.com/".extraheader "${GIT_HTTP_EXTRAHEADER}"
          }

          # use git protocol version 2 if available
          ! git config --help | grep -q "wire protocol version 2" || {
              git config --global --add protocol.version 2
              GIT_DEPTH_ARG="--depth=1"
          }

          # ------------------------------------------------------------------------------

          # clone/fetch
          GIT_URL=${GITHUB_SERVER_URL:-${GITHUB_URL:-https://github.com}}/${GITHUB_REPOSITORY}.git
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/heads\/}"
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/tags\/}"
          fi
          cd ${GITHUB_WORKSPACE}
          git clone ${GIT_DEPTH_ARG:-} ${GIT_BRANCH_ARG} ${GIT_URL} $(pwd)
          # shellcheck disable=SC2193
          if [[ "${GITHUB_EVENT_NAME}" = "pull_request" ]]; then
              git fetch ${GIT_DEPTH_ARG:-} origin ${GITHUB_REF}:refs/remotes/pull/${GITHUB_REF#refs\/pull\/}
              GITHUB_SHA=$(git rev-parse pull/${GITHUB_REF#refs\/pull\/})
              GITHUB_REF=refs/heads/${GITHUB_BASE_REF}
          fi

          # ------------------------------------------------------------------------------

          # checkout
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              git checkout -B ${GITHUB_REF#refs\/heads\/} ${GITHUB_SHA:-origin/${GITHUB_REF#refs\/heads\/}}
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              git checkout ${GITHUB_REF}
          else
              set -x
              printenv
              cat ${GITHUB_EVENT_PATH}
              exit 1
          fi

          # submodules
          git submodule sync --recursive
          git submodule update --init --recursive --force ${GIT_DEPTH_ARG:-}
      - shell: bash
        run: ./.ci.sh before_deploy
      - shell: bash
        run: ./.ci.sh deploy
      - shell: bash
        run: ./.ci.sh after_deploy || true
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
          path: |-
            sf-ci-echo-benchmark
            some-job-artifact.md
            log.sh-session
          retention-days: 7
  deployc-minimal-ubuntu:
    needs:
      - deployc-common-smoke
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        container:
          - sf-ubuntu-16.04
          - sf-ubuntu-18.04
        sf_ci_brew_install:
          - minimal
    name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      SF_LOG_BOOTSTRAP: true
      SF_PRINTENV_BOOTSTRAP: '${{ secrets.SF_PRINTENV_BOOTSTRAP }}'
      SF_TRANSCRYPT_PASSWORD: '${{ secrets.SF_TRANSCRYPT_PASSWORD }}'
      V: '${{ secrets.V }}'
      DOCKER_USERNAME: '${{ secrets.DOCKER_USERNAME }}'
      DOCKER_TOKEN: '${{ secrets.DOCKER_TOKEN }}'
      GITHUB_MATRIX_CONTAINER: '${{ matrix.container }}'
      GITHUB_MATRIX_SF_CI_BREW_INSTALL: '${{ matrix.sf_ci_brew_install }}'
      GITHUB_JOB_NAME: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    steps:
      - name: support-firecloud/bin/github-checkout
        shell: bash
        run: |
          set -x
          #!/usr/bin/env bash
          set -euo pipefail

          # basic git config
          git config --global core.autocrlf false
          git config --global core.eol lf
          git config --global advice.detachedHead false

          # use https instead of everything else
          git config --global --add url."https://github.com/".insteadOf "git://github.com/"
          git config --global --add url."https://github.com/".insteadOf "git@github.com:"
          git config --global --add url."https://github.com/".insteadOf "github://"
          git config --global --add url."https://github.com/".insteadOf "ssh://git@github.com/"

          # use github token transparently
          [[ -z "${GITHUB_TOKEN:-}" ]] || {
              BASE64="base64 --wrap 0"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="base64"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="openssl base64 -A"
              echo "" | ${BASE64} >/dev/null 2>&1
              GIT_HTTP_EXTRAHEADER="AUTHORIZATION: basic $(echo -n "x-access-token:${GITHUB_TOKEN}" | ${BASE64})"
              git config --global --add http."https://github.com/".extraheader "${GIT_HTTP_EXTRAHEADER}"
          }

          # use git protocol version 2 if available
          ! git config --help | grep -q "wire protocol version 2" || {
              git config --global --add protocol.version 2
              GIT_DEPTH_ARG="--depth=1"
          }

          # ------------------------------------------------------------------------------

          # clone/fetch
          GIT_URL=${GITHUB_SERVER_URL:-${GITHUB_URL:-https://github.com}}/${GITHUB_REPOSITORY}.git
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/heads\/}"
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/tags\/}"
          fi
          cd ${GITHUB_WORKSPACE}
          git clone ${GIT_DEPTH_ARG:-} ${GIT_BRANCH_ARG} ${GIT_URL} $(pwd)
          # shellcheck disable=SC2193
          if [[ "${GITHUB_EVENT_NAME}" = "pull_request" ]]; then
              git fetch ${GIT_DEPTH_ARG:-} origin ${GITHUB_REF}:refs/remotes/pull/${GITHUB_REF#refs\/pull\/}
              GITHUB_SHA=$(git rev-parse pull/${GITHUB_REF#refs\/pull\/})
              GITHUB_REF=refs/heads/${GITHUB_BASE_REF}
          fi

          # ------------------------------------------------------------------------------

          # checkout
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              git checkout -B ${GITHUB_REF#refs\/heads\/} ${GITHUB_SHA:-origin/${GITHUB_REF#refs\/heads\/}}
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              git checkout ${GITHUB_REF}
          else
              set -x
              printenv
              cat ${GITHUB_EVENT_PATH}
              exit 1
          fi

          # submodules
          git submodule sync --recursive
          git submodule update --init --recursive --force ${GIT_DEPTH_ARG:-}
      - shell: bash
        run: ./.ci.sh before_deploy
      - shell: bash
        run: ./.ci.sh deploy
      - shell: bash
        run: ./.ci.sh after_deploy || true
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
          path: |-
            sf-ci-echo-benchmark
            some-job-artifact.md
            log.sh-session
          retention-days: 7
  deployc-common-smoke:
    needs: deployc-minimal-smoke
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        container:
          - sf-ubuntu-20.04
        sf_ci_brew_install:
          - common
    name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      SF_LOG_BOOTSTRAP: true
      SF_PRINTENV_BOOTSTRAP: '${{ secrets.SF_PRINTENV_BOOTSTRAP }}'
      SF_TRANSCRYPT_PASSWORD: '${{ secrets.SF_TRANSCRYPT_PASSWORD }}'
      V: '${{ secrets.V }}'
      DOCKER_USERNAME: '${{ secrets.DOCKER_USERNAME }}'
      DOCKER_TOKEN: '${{ secrets.DOCKER_TOKEN }}'
      GITHUB_MATRIX_CONTAINER: '${{ matrix.container }}'
      GITHUB_MATRIX_SF_CI_BREW_INSTALL: '${{ matrix.sf_ci_brew_install }}'
      GITHUB_JOB_NAME: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    steps:
      - name: support-firecloud/bin/github-checkout
        shell: bash
        run: |
          set -x
          #!/usr/bin/env bash
          set -euo pipefail

          # basic git config
          git config --global core.autocrlf false
          git config --global core.eol lf
          git config --global advice.detachedHead false

          # use https instead of everything else
          git config --global --add url."https://github.com/".insteadOf "git://github.com/"
          git config --global --add url."https://github.com/".insteadOf "git@github.com:"
          git config --global --add url."https://github.com/".insteadOf "github://"
          git config --global --add url."https://github.com/".insteadOf "ssh://git@github.com/"

          # use github token transparently
          [[ -z "${GITHUB_TOKEN:-}" ]] || {
              BASE64="base64 --wrap 0"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="base64"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="openssl base64 -A"
              echo "" | ${BASE64} >/dev/null 2>&1
              GIT_HTTP_EXTRAHEADER="AUTHORIZATION: basic $(echo -n "x-access-token:${GITHUB_TOKEN}" | ${BASE64})"
              git config --global --add http."https://github.com/".extraheader "${GIT_HTTP_EXTRAHEADER}"
          }

          # use git protocol version 2 if available
          ! git config --help | grep -q "wire protocol version 2" || {
              git config --global --add protocol.version 2
              GIT_DEPTH_ARG="--depth=1"
          }

          # ------------------------------------------------------------------------------

          # clone/fetch
          GIT_URL=${GITHUB_SERVER_URL:-${GITHUB_URL:-https://github.com}}/${GITHUB_REPOSITORY}.git
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/heads\/}"
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/tags\/}"
          fi
          cd ${GITHUB_WORKSPACE}
          git clone ${GIT_DEPTH_ARG:-} ${GIT_BRANCH_ARG} ${GIT_URL} $(pwd)
          # shellcheck disable=SC2193
          if [[ "${GITHUB_EVENT_NAME}" = "pull_request" ]]; then
              git fetch ${GIT_DEPTH_ARG:-} origin ${GITHUB_REF}:refs/remotes/pull/${GITHUB_REF#refs\/pull\/}
              GITHUB_SHA=$(git rev-parse pull/${GITHUB_REF#refs\/pull\/})
              GITHUB_REF=refs/heads/${GITHUB_BASE_REF}
          fi

          # ------------------------------------------------------------------------------

          # checkout
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              git checkout -B ${GITHUB_REF#refs\/heads\/} ${GITHUB_SHA:-origin/${GITHUB_REF#refs\/heads\/}}
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              git checkout ${GITHUB_REF}
          else
              set -x
              printenv
              cat ${GITHUB_EVENT_PATH}
              exit 1
          fi

          # submodules
          git submodule sync --recursive
          git submodule update --init --recursive --force ${GIT_DEPTH_ARG:-}
      - shell: bash
        run: ./.ci.sh before_deploy
      - shell: bash
        run: ./.ci.sh deploy
      - shell: bash
        run: ./.ci.sh after_deploy || true
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
          path: |-
            sf-ci-echo-benchmark
            some-job-artifact.md
            log.sh-session
          retention-days: 7
  deployc-common-arch:
    needs: deployc-minimal-arch
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        container:
          - sf-arch-0
        sf_ci_brew_install:
          - common
    name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      SF_LOG_BOOTSTRAP: true
      SF_PRINTENV_BOOTSTRAP: '${{ secrets.SF_PRINTENV_BOOTSTRAP }}'
      SF_TRANSCRYPT_PASSWORD: '${{ secrets.SF_TRANSCRYPT_PASSWORD }}'
      V: '${{ secrets.V }}'
      DOCKER_USERNAME: '${{ secrets.DOCKER_USERNAME }}'
      DOCKER_TOKEN: '${{ secrets.DOCKER_TOKEN }}'
      GITHUB_MATRIX_CONTAINER: '${{ matrix.container }}'
      GITHUB_MATRIX_SF_CI_BREW_INSTALL: '${{ matrix.sf_ci_brew_install }}'
      GITHUB_JOB_NAME: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    steps:
      - name: support-firecloud/bin/github-checkout
        shell: bash
        run: |
          set -x
          #!/usr/bin/env bash
          set -euo pipefail

          # basic git config
          git config --global core.autocrlf false
          git config --global core.eol lf
          git config --global advice.detachedHead false

          # use https instead of everything else
          git config --global --add url."https://github.com/".insteadOf "git://github.com/"
          git config --global --add url."https://github.com/".insteadOf "git@github.com:"
          git config --global --add url."https://github.com/".insteadOf "github://"
          git config --global --add url."https://github.com/".insteadOf "ssh://git@github.com/"

          # use github token transparently
          [[ -z "${GITHUB_TOKEN:-}" ]] || {
              BASE64="base64 --wrap 0"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="base64"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="openssl base64 -A"
              echo "" | ${BASE64} >/dev/null 2>&1
              GIT_HTTP_EXTRAHEADER="AUTHORIZATION: basic $(echo -n "x-access-token:${GITHUB_TOKEN}" | ${BASE64})"
              git config --global --add http."https://github.com/".extraheader "${GIT_HTTP_EXTRAHEADER}"
          }

          # use git protocol version 2 if available
          ! git config --help | grep -q "wire protocol version 2" || {
              git config --global --add protocol.version 2
              GIT_DEPTH_ARG="--depth=1"
          }

          # ------------------------------------------------------------------------------

          # clone/fetch
          GIT_URL=${GITHUB_SERVER_URL:-${GITHUB_URL:-https://github.com}}/${GITHUB_REPOSITORY}.git
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/heads\/}"
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/tags\/}"
          fi
          cd ${GITHUB_WORKSPACE}
          git clone ${GIT_DEPTH_ARG:-} ${GIT_BRANCH_ARG} ${GIT_URL} $(pwd)
          # shellcheck disable=SC2193
          if [[ "${GITHUB_EVENT_NAME}" = "pull_request" ]]; then
              git fetch ${GIT_DEPTH_ARG:-} origin ${GITHUB_REF}:refs/remotes/pull/${GITHUB_REF#refs\/pull\/}
              GITHUB_SHA=$(git rev-parse pull/${GITHUB_REF#refs\/pull\/})
              GITHUB_REF=refs/heads/${GITHUB_BASE_REF}
          fi

          # ------------------------------------------------------------------------------

          # checkout
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              git checkout -B ${GITHUB_REF#refs\/heads\/} ${GITHUB_SHA:-origin/${GITHUB_REF#refs\/heads\/}}
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              git checkout ${GITHUB_REF}
          else
              set -x
              printenv
              cat ${GITHUB_EVENT_PATH}
              exit 1
          fi

          # submodules
          git submodule sync --recursive
          git submodule update --init --recursive --force ${GIT_DEPTH_ARG:-}
      - shell: bash
        run: ./.ci.sh before_deploy
      - shell: bash
        run: ./.ci.sh deploy
      - shell: bash
        run: ./.ci.sh after_deploy || true
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
          path: |-
            sf-ci-echo-benchmark
            some-job-artifact.md
            log.sh-session
          retention-days: 7
  deployc-common-alpine:
    needs: deployc-minimal-alpine
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        container:
          - sf-alpine-3.11.7
        sf_ci_brew_install:
          - common
    name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      SF_LOG_BOOTSTRAP: true
      SF_PRINTENV_BOOTSTRAP: '${{ secrets.SF_PRINTENV_BOOTSTRAP }}'
      SF_TRANSCRYPT_PASSWORD: '${{ secrets.SF_TRANSCRYPT_PASSWORD }}'
      V: '${{ secrets.V }}'
      DOCKER_USERNAME: '${{ secrets.DOCKER_USERNAME }}'
      DOCKER_TOKEN: '${{ secrets.DOCKER_TOKEN }}'
      GITHUB_MATRIX_CONTAINER: '${{ matrix.container }}'
      GITHUB_MATRIX_SF_CI_BREW_INSTALL: '${{ matrix.sf_ci_brew_install }}'
      GITHUB_JOB_NAME: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    steps:
      - name: support-firecloud/bin/github-checkout
        shell: bash
        run: |
          set -x
          #!/usr/bin/env bash
          set -euo pipefail

          # basic git config
          git config --global core.autocrlf false
          git config --global core.eol lf
          git config --global advice.detachedHead false

          # use https instead of everything else
          git config --global --add url."https://github.com/".insteadOf "git://github.com/"
          git config --global --add url."https://github.com/".insteadOf "git@github.com:"
          git config --global --add url."https://github.com/".insteadOf "github://"
          git config --global --add url."https://github.com/".insteadOf "ssh://git@github.com/"

          # use github token transparently
          [[ -z "${GITHUB_TOKEN:-}" ]] || {
              BASE64="base64 --wrap 0"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="base64"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="openssl base64 -A"
              echo "" | ${BASE64} >/dev/null 2>&1
              GIT_HTTP_EXTRAHEADER="AUTHORIZATION: basic $(echo -n "x-access-token:${GITHUB_TOKEN}" | ${BASE64})"
              git config --global --add http."https://github.com/".extraheader "${GIT_HTTP_EXTRAHEADER}"
          }

          # use git protocol version 2 if available
          ! git config --help | grep -q "wire protocol version 2" || {
              git config --global --add protocol.version 2
              GIT_DEPTH_ARG="--depth=1"
          }

          # ------------------------------------------------------------------------------

          # clone/fetch
          GIT_URL=${GITHUB_SERVER_URL:-${GITHUB_URL:-https://github.com}}/${GITHUB_REPOSITORY}.git
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/heads\/}"
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/tags\/}"
          fi
          cd ${GITHUB_WORKSPACE}
          git clone ${GIT_DEPTH_ARG:-} ${GIT_BRANCH_ARG} ${GIT_URL} $(pwd)
          # shellcheck disable=SC2193
          if [[ "${GITHUB_EVENT_NAME}" = "pull_request" ]]; then
              git fetch ${GIT_DEPTH_ARG:-} origin ${GITHUB_REF}:refs/remotes/pull/${GITHUB_REF#refs\/pull\/}
              GITHUB_SHA=$(git rev-parse pull/${GITHUB_REF#refs\/pull\/})
              GITHUB_REF=refs/heads/${GITHUB_BASE_REF}
          fi

          # ------------------------------------------------------------------------------

          # checkout
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              git checkout -B ${GITHUB_REF#refs\/heads\/} ${GITHUB_SHA:-origin/${GITHUB_REF#refs\/heads\/}}
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              git checkout ${GITHUB_REF}
          else
              set -x
              printenv
              cat ${GITHUB_EVENT_PATH}
              exit 1
          fi

          # submodules
          git submodule sync --recursive
          git submodule update --init --recursive --force ${GIT_DEPTH_ARG:-}
      - shell: bash
        run: ./.ci.sh before_deploy
      - shell: bash
        run: ./.ci.sh deploy
      - shell: bash
        run: ./.ci.sh after_deploy || true
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
          path: |-
            sf-ci-echo-benchmark
            some-job-artifact.md
            log.sh-session
          retention-days: 7
  deployc-common-centos:
    needs: deployc-minimal-centos
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        container:
          - sf-centos-8
        sf_ci_brew_install:
          - common
    name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      SF_LOG_BOOTSTRAP: true
      SF_PRINTENV_BOOTSTRAP: '${{ secrets.SF_PRINTENV_BOOTSTRAP }}'
      SF_TRANSCRYPT_PASSWORD: '${{ secrets.SF_TRANSCRYPT_PASSWORD }}'
      V: '${{ secrets.V }}'
      DOCKER_USERNAME: '${{ secrets.DOCKER_USERNAME }}'
      DOCKER_TOKEN: '${{ secrets.DOCKER_TOKEN }}'
      GITHUB_MATRIX_CONTAINER: '${{ matrix.container }}'
      GITHUB_MATRIX_SF_CI_BREW_INSTALL: '${{ matrix.sf_ci_brew_install }}'
      GITHUB_JOB_NAME: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    steps:
      - name: support-firecloud/bin/github-checkout
        shell: bash
        run: |
          set -x
          #!/usr/bin/env bash
          set -euo pipefail

          # basic git config
          git config --global core.autocrlf false
          git config --global core.eol lf
          git config --global advice.detachedHead false

          # use https instead of everything else
          git config --global --add url."https://github.com/".insteadOf "git://github.com/"
          git config --global --add url."https://github.com/".insteadOf "git@github.com:"
          git config --global --add url."https://github.com/".insteadOf "github://"
          git config --global --add url."https://github.com/".insteadOf "ssh://git@github.com/"

          # use github token transparently
          [[ -z "${GITHUB_TOKEN:-}" ]] || {
              BASE64="base64 --wrap 0"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="base64"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="openssl base64 -A"
              echo "" | ${BASE64} >/dev/null 2>&1
              GIT_HTTP_EXTRAHEADER="AUTHORIZATION: basic $(echo -n "x-access-token:${GITHUB_TOKEN}" | ${BASE64})"
              git config --global --add http."https://github.com/".extraheader "${GIT_HTTP_EXTRAHEADER}"
          }

          # use git protocol version 2 if available
          ! git config --help | grep -q "wire protocol version 2" || {
              git config --global --add protocol.version 2
              GIT_DEPTH_ARG="--depth=1"
          }

          # ------------------------------------------------------------------------------

          # clone/fetch
          GIT_URL=${GITHUB_SERVER_URL:-${GITHUB_URL:-https://github.com}}/${GITHUB_REPOSITORY}.git
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/heads\/}"
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/tags\/}"
          fi
          cd ${GITHUB_WORKSPACE}
          git clone ${GIT_DEPTH_ARG:-} ${GIT_BRANCH_ARG} ${GIT_URL} $(pwd)
          # shellcheck disable=SC2193
          if [[ "${GITHUB_EVENT_NAME}" = "pull_request" ]]; then
              git fetch ${GIT_DEPTH_ARG:-} origin ${GITHUB_REF}:refs/remotes/pull/${GITHUB_REF#refs\/pull\/}
              GITHUB_SHA=$(git rev-parse pull/${GITHUB_REF#refs\/pull\/})
              GITHUB_REF=refs/heads/${GITHUB_BASE_REF}
          fi

          # ------------------------------------------------------------------------------

          # checkout
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              git checkout -B ${GITHUB_REF#refs\/heads\/} ${GITHUB_SHA:-origin/${GITHUB_REF#refs\/heads\/}}
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              git checkout ${GITHUB_REF}
          else
              set -x
              printenv
              cat ${GITHUB_EVENT_PATH}
              exit 1
          fi

          # submodules
          git submodule sync --recursive
          git submodule update --init --recursive --force ${GIT_DEPTH_ARG:-}
      - shell: bash
        run: ./.ci.sh before_deploy
      - shell: bash
        run: ./.ci.sh deploy
      - shell: bash
        run: ./.ci.sh after_deploy || true
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
          path: |-
            sf-ci-echo-benchmark
            some-job-artifact.md
            log.sh-session
          retention-days: 7
  deployc-common-debian:
    needs: deployc-minimal-debian
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        container:
          - sf-debian-9
          - sf-debian-10
        sf_ci_brew_install:
          - common
    name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      SF_LOG_BOOTSTRAP: true
      SF_PRINTENV_BOOTSTRAP: '${{ secrets.SF_PRINTENV_BOOTSTRAP }}'
      SF_TRANSCRYPT_PASSWORD: '${{ secrets.SF_TRANSCRYPT_PASSWORD }}'
      V: '${{ secrets.V }}'
      DOCKER_USERNAME: '${{ secrets.DOCKER_USERNAME }}'
      DOCKER_TOKEN: '${{ secrets.DOCKER_TOKEN }}'
      GITHUB_MATRIX_CONTAINER: '${{ matrix.container }}'
      GITHUB_MATRIX_SF_CI_BREW_INSTALL: '${{ matrix.sf_ci_brew_install }}'
      GITHUB_JOB_NAME: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    steps:
      - name: support-firecloud/bin/github-checkout
        shell: bash
        run: |
          set -x
          #!/usr/bin/env bash
          set -euo pipefail

          # basic git config
          git config --global core.autocrlf false
          git config --global core.eol lf
          git config --global advice.detachedHead false

          # use https instead of everything else
          git config --global --add url."https://github.com/".insteadOf "git://github.com/"
          git config --global --add url."https://github.com/".insteadOf "git@github.com:"
          git config --global --add url."https://github.com/".insteadOf "github://"
          git config --global --add url."https://github.com/".insteadOf "ssh://git@github.com/"

          # use github token transparently
          [[ -z "${GITHUB_TOKEN:-}" ]] || {
              BASE64="base64 --wrap 0"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="base64"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="openssl base64 -A"
              echo "" | ${BASE64} >/dev/null 2>&1
              GIT_HTTP_EXTRAHEADER="AUTHORIZATION: basic $(echo -n "x-access-token:${GITHUB_TOKEN}" | ${BASE64})"
              git config --global --add http."https://github.com/".extraheader "${GIT_HTTP_EXTRAHEADER}"
          }

          # use git protocol version 2 if available
          ! git config --help | grep -q "wire protocol version 2" || {
              git config --global --add protocol.version 2
              GIT_DEPTH_ARG="--depth=1"
          }

          # ------------------------------------------------------------------------------

          # clone/fetch
          GIT_URL=${GITHUB_SERVER_URL:-${GITHUB_URL:-https://github.com}}/${GITHUB_REPOSITORY}.git
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/heads\/}"
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/tags\/}"
          fi
          cd ${GITHUB_WORKSPACE}
          git clone ${GIT_DEPTH_ARG:-} ${GIT_BRANCH_ARG} ${GIT_URL} $(pwd)
          # shellcheck disable=SC2193
          if [[ "${GITHUB_EVENT_NAME}" = "pull_request" ]]; then
              git fetch ${GIT_DEPTH_ARG:-} origin ${GITHUB_REF}:refs/remotes/pull/${GITHUB_REF#refs\/pull\/}
              GITHUB_SHA=$(git rev-parse pull/${GITHUB_REF#refs\/pull\/})
              GITHUB_REF=refs/heads/${GITHUB_BASE_REF}
          fi

          # ------------------------------------------------------------------------------

          # checkout
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              git checkout -B ${GITHUB_REF#refs\/heads\/} ${GITHUB_SHA:-origin/${GITHUB_REF#refs\/heads\/}}
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              git checkout ${GITHUB_REF}
          else
              set -x
              printenv
              cat ${GITHUB_EVENT_PATH}
              exit 1
          fi

          # submodules
          git submodule sync --recursive
          git submodule update --init --recursive --force ${GIT_DEPTH_ARG:-}
      - shell: bash
        run: ./.ci.sh before_deploy
      - shell: bash
        run: ./.ci.sh deploy
      - shell: bash
        run: ./.ci.sh after_deploy || true
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
          path: |-
            sf-ci-echo-benchmark
            some-job-artifact.md
            log.sh-session
          retention-days: 7
  deployc-common-ubuntu:
    needs: deployc-minimal-ubuntu
    timeout-minutes: 30
    strategy:
      fail-fast: false
      matrix:
        container:
          - sf-ubuntu-16.04
          - sf-ubuntu-18.04
        sf_ci_brew_install:
          - common
    name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}'
      SF_LOG_BOOTSTRAP: true
      SF_PRINTENV_BOOTSTRAP: '${{ secrets.SF_PRINTENV_BOOTSTRAP }}'
      SF_TRANSCRYPT_PASSWORD: '${{ secrets.SF_TRANSCRYPT_PASSWORD }}'
      V: '${{ secrets.V }}'
      DOCKER_USERNAME: '${{ secrets.DOCKER_USERNAME }}'
      DOCKER_TOKEN: '${{ secrets.DOCKER_TOKEN }}'
      GITHUB_MATRIX_CONTAINER: '${{ matrix.container }}'
      GITHUB_MATRIX_SF_CI_BREW_INSTALL: '${{ matrix.sf_ci_brew_install }}'
      GITHUB_JOB_NAME: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
    steps:
      - name: support-firecloud/bin/github-checkout
        shell: bash
        run: |
          set -x
          #!/usr/bin/env bash
          set -euo pipefail

          # basic git config
          git config --global core.autocrlf false
          git config --global core.eol lf
          git config --global advice.detachedHead false

          # use https instead of everything else
          git config --global --add url."https://github.com/".insteadOf "git://github.com/"
          git config --global --add url."https://github.com/".insteadOf "git@github.com:"
          git config --global --add url."https://github.com/".insteadOf "github://"
          git config --global --add url."https://github.com/".insteadOf "ssh://git@github.com/"

          # use github token transparently
          [[ -z "${GITHUB_TOKEN:-}" ]] || {
              BASE64="base64 --wrap 0"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="base64"
              echo "" | ${BASE64} >/dev/null 2>&1 || BASE64="openssl base64 -A"
              echo "" | ${BASE64} >/dev/null 2>&1
              GIT_HTTP_EXTRAHEADER="AUTHORIZATION: basic $(echo -n "x-access-token:${GITHUB_TOKEN}" | ${BASE64})"
              git config --global --add http."https://github.com/".extraheader "${GIT_HTTP_EXTRAHEADER}"
          }

          # use git protocol version 2 if available
          ! git config --help | grep -q "wire protocol version 2" || {
              git config --global --add protocol.version 2
              GIT_DEPTH_ARG="--depth=1"
          }

          # ------------------------------------------------------------------------------

          # clone/fetch
          GIT_URL=${GITHUB_SERVER_URL:-${GITHUB_URL:-https://github.com}}/${GITHUB_REPOSITORY}.git
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/heads\/}"
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              GIT_BRANCH_ARG="--branch ${GITHUB_REF#refs\/tags\/}"
          fi
          cd ${GITHUB_WORKSPACE}
          git clone ${GIT_DEPTH_ARG:-} ${GIT_BRANCH_ARG} ${GIT_URL} $(pwd)
          # shellcheck disable=SC2193
          if [[ "${GITHUB_EVENT_NAME}" = "pull_request" ]]; then
              git fetch ${GIT_DEPTH_ARG:-} origin ${GITHUB_REF}:refs/remotes/pull/${GITHUB_REF#refs\/pull\/}
              GITHUB_SHA=$(git rev-parse pull/${GITHUB_REF#refs\/pull\/})
              GITHUB_REF=refs/heads/${GITHUB_BASE_REF}
          fi

          # ------------------------------------------------------------------------------

          # checkout
          if [[ "${GITHUB_REF}" =~ ^refs/heads/ ]]; then
              git checkout -B ${GITHUB_REF#refs\/heads\/} ${GITHUB_SHA:-origin/${GITHUB_REF#refs\/heads\/}}
          elif [[ "${GITHUB_REF}" =~ ^refs/tags/ ]]; then
              git checkout ${GITHUB_REF}
          else
              set -x
              printenv
              cat ${GITHUB_EVENT_PATH}
              exit 1
          fi

          # submodules
          git submodule sync --recursive
          git submodule update --init --recursive --force ${GIT_DEPTH_ARG:-}
      - shell: bash
        run: ./.ci.sh before_deploy
      - shell: bash
        run: ./.ci.sh deploy
      - shell: bash
        run: ./.ci.sh after_deploy || true
      - name: Upload Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: '${{ matrix.container }}-${{ matrix.sf_ci_brew_install }}'
          path: |-
            sf-ci-echo-benchmark
            some-job-artifact.md
            log.sh-session
          retention-days: 7
