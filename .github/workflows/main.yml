# WARNING: DO NOT EDIT. AUTO-GENERATED CODE (.github/workflows/.main.src.yml)
name: CI
'on':
  push:
    branches: master
aliases:
  strategy:
    fail-fast: false
    matrix:
      os:
        - ubuntu-16.04
        - ubuntu-18.04
        - macos-latest
      sf_ci_brew_install:
        - minimal
        - common
  env:
    GH_TOKEN: '${{ secrets.GH_TOKEN }}'
    SF_CI_BREW_INSTALL: '${{ matrix.sf_ci_brew_install }}'
    SF_LOG_BOOTSTRAP: true
    TRANSCRYPT_PASSWORD: '${{ secrets.TRANSCRYPT_PASSWORD }}'
  checkout:
    uses: actions/checkout@v2
  checkout-submodules:
    name: Run actions/checkout@v2 submodules
    shell: bash
    run: |
      auth_header="$(git config --local --get http.https://github.com/.extraheader)"
      git submodule sync --recursive
      git -c "http.extraheader=$auth_header" -c protocol.version=2 \
      submodule update --init --force --recursive --depth=1
  notify-slack:
    env:
      SLACK_WEBHOOK: '${{ secrets.SLACK_WEBHHOK }}'
      SLACK_CHANNEL: cloud-ci
      CI_STATUS: '${{ job.status }}'
    run: ./.ci.sh notifications || true
    if: always()
jobs:
  main:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-16.04
          - ubuntu-18.04
          - macos-latest
        sf_ci_brew_install:
          - minimal
          - common
    name: 'main-${{ matrix.os }}-${{ matrix.sf_ci_brew_install }}'
    runs-on: '${{ matrix.os }}'
    env:
      GH_TOKEN: '${{ secrets.GH_TOKEN }}'
      SF_CI_BREW_INSTALL: '${{ matrix.sf_ci_brew_install }}'
      SF_LOG_BOOTSTRAP: true
      TRANSCRYPT_PASSWORD: '${{ secrets.TRANSCRYPT_PASSWORD }}'
    steps:
      - uses: actions/checkout@v2
      - name: Run actions/checkout@v2 submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 \
          submodule update --init --force --recursive --depth=1
      - run: ./.ci.sh before_install
      - run: ./.ci.sh install
      - run: ./.ci.sh before_script
      - run: ./.ci.sh script
      - run: ./.ci.sh after_failure || true
        if: failure()
      - run: ./.ci.sh after_success || true
      - run: ./.ci.sh after_script || true
        if: always()
      - env:
          SLACK_WEBHOOK: '${{ secrets.SLACK_WEBHHOK }}'
          SLACK_CHANNEL: cloud-ci
          CI_STATUS: '${{ job.status }}'
        run: ./.ci.sh notifications || true
        if: always()
  deploy:
    needs: main
    if: github.ref == 'refs/heads/master'
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-16.04
          - ubuntu-18.04
          - macos-latest
        sf_ci_brew_install:
          - minimal
          - common
    name: 'deploy-${{ matrix.os }}-${{ matrix.sf_ci_brew_install }}'
    runs-on: '${{ matrix.os }}'
    env:
      DOCKER_PASSWORD: '${{ secrets.DOCKER_PASSWORD }}'
      DOCKER_USERNAME: '${{ secrets.DOCKER_USERNAME }}'
      SF_DEPLOY_DOCKER_IMAGE: true
      GH_TOKEN: '${{ secrets.GH_TOKEN }}'
      SF_CI_BREW_INSTALL: '${{ matrix.sf_ci_brew_install }}'
      SF_LOG_BOOTSTRAP: true
      TRANSCRYPT_PASSWORD: '${{ secrets.TRANSCRYPT_PASSWORD }}'
    steps:
      - uses: actions/checkout@v2
      - name: Run actions/checkout@v2 submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 \
          submodule update --init --force --recursive --depth=1
      - run: ./.ci.sh before_deploy
      - run: ./.ci.sh deploy
      - run: ./.ci.sh after_deploy || true
      - env:
          SLACK_WEBHOOK: '${{ secrets.SLACK_WEBHHOK }}'
          SLACK_CHANNEL: cloud-ci
          CI_STATUS: '${{ job.status }}'
        run: ./.ci.sh notifications || true
        if: always()

